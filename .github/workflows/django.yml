name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Test Environment
        run: |
          # Create a test settings file for CI
          cat > test_settings.py << EOF
          from backend.settings import *
          import os

          # Override database settings for testing
          DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.postgresql',
                  'NAME': 'github_actions',
                  'USER': 'postgres',
                  'PASSWORD': 'postgres',
                  'HOST': 'localhost',
                  'PORT': '5432',
              }
          }

          # Set required environment variables
          SECRET_KEY = 'test-secret-key-for-github-actions'
          DEBUG = True
          ALLOWED_HOSTS = ['localhost', '127.0.0.1']

          # Channel layers for testing
          CHANNEL_LAYERS = {
              'default': {
                  'BACKEND': 'channels_redis.core.RedisChannelLayer',
                  'CONFIG': {
                      'hosts': [('localhost', 6379)],
                  },
              },
          }
          EOF

      - name: Run Migrations
        env:
          DJANGO_SETTINGS_MODULE: test_settings
        run: |
          python manage.py migrate --noinput

      - name: Run Tests
        env:
          DJANGO_SETTINGS_MODULE: test_settings
        run: |
          python manage.py test --noinput
