version: '3.9'

services:
  web:
    build: .
    restart: unless-stopped
    command: >
      sh -c "while ! nc -z db 5432; do
              echo 'Waiting for database...';
              sleep 1;
            done;
            python manage.py collectstatic --noinput &&
            python manage.py migrate &&
            gunicorn --bind 0.0.0.0:8000 --workers 3 backend.wsgi:application"
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-shreyuu}@db:5432/djangochatify_db
      - DJANGO_SETTINGS_MODULE=backend.settings
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=djangochatify_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-shreyuu}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  static_volume:

networks:
  djangochatify_network:
    driver: bridge